---
title: "Erdem_NN1"
format: html
editor: visual
---

```{r}
library(tidyverse)
library(keras)
library(ggplot2)
```

## Data Preparation

```{r}
train_data = readRDS("train.rds")
train_data
```

```{r}
train_data |> ggplot(aes(x=score)) +
  geom_histogram()
```

```{r}
library(fastDummies)
```

```{r}
train_data_dummy <- dummy_cols(train_data,remove_first_dummy=TRUE,remove_selected_columns=TRUE)
train_data_dummy
```

```{r}
library(dplyr)
```

```{r}
set.seed(1)

#Use 70% of dataset as training set and remaining 30% as testing set
sample <- sample(c(TRUE, FALSE), nrow(train_data_dummy), replace=TRUE, prob=c(0.9,0.1))
train  <- train_data_dummy[sample, ]
test   <- train_data_dummy[!sample, ]

```

```{r}
X_train <- train[, -which(names(train) == "score")]
y_train <- data.frame(train$score)
```

```{r}
X_test <- test[, -which(names(train) == "score")]
y_test <- test$score
```

```{r}
multinom <- keras_model_sequential() %>%
    layer_dense(16, activation = 'relu') %>%
    layer_dense(12, activation = 'relu') %>%
    layer_dense(1)

multinom %>% compile(
  loss = 'mean_absolute_error',
  optimizer = optimizer_adam(0.001)
)

```

```         
```

```{r}
pl <- multinom %>% fit(as.matrix(X_train), 
      as.matrix(y_train), 
      epochs = 100, 
      validation_split = 0.1,       
      verbose = 1)

```

```{r}
y_pred <- predict(multinom, as.matrix(X_train))

# Calculate the Mean Squared Error (MSE)
mean((as.matrix(y_train) - y_pred)^2)
```

```{r}
y_pred <- predict(multinom, as.matrix(X_test))
# Calculate the Mean Squared Error (MSE)
mean((y_pred - y_test)^2)
```

```{r}
ggplot(data=NULL, aes(x=y_test,y=y_pred)) +
  geom_point()+
  geom_abline(intercept = 0, slope = 1, color = "blue") +
  labs(x = "Observed", y = "Predicted") +
  ggtitle("Observed vs. Predicted") +
  xlim(c(-2,2)) +
  ylim(c(-2,2))
```

```{r}
predict_linreg = lm(score~.,data=train)
#summary(predict_linreg)
y_pred_lin_reg <- predict(predict_linreg,newdata=test)

# Calculate the Mean Squared Error (MSE)
mean((y_pred_lin_reg - y_test)^2)
```

```{r}
ggplot(data=NULL, aes(x=y_test,y=y_pred_lin_reg)) +
  geom_point()+
  geom_abline(intercept = 0, slope = 1, color = "blue") +
  labs(x = "Observed", y = "Predicted") +
  ggtitle("Observed vs. Predicted") +
  xlim(c(-2,2)) +
  ylim(c(-2,2))
```
